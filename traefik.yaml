apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: traefik
  template:
    metadata:
      labels:
        name: traefik
    spec:
      containers:
      - args:
        - --entryPoints.traefik.address=$(NODE_IP):9000
        - --entryPoints.web.address=$(NODE_IP):80
        - --entryPoints.websecure.address=$(NODE_IP):443
        - --entryPoints.websecure.http.tls=true
        - --api.dashboard=false
        - --ping=true
        - --providers.kubernetesingress
        - --providers.kubernetescrd
        image: traefik:2.3.5
        imagePullPolicy: IfNotPresent
        env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        name: traefik
        ports:
        - containerPort: 9000
          name: traefik
          protocol: TCP
        - containerPort: 80
          hostPort: 80
          name: web
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: websecure
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ping
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        securityContext:
          readOnlyRootFilesystem: true
          # https://github.com/kubernetes/kubernetes/issues/56374
          # Kubernetes cannot yet set ambiant capabilities.
          # So we run as root. Once this is fixed, run as 65532, runAsNonRoot: true
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /tmp
          name: tmp
      # dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      # schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
      serviceAccount: traefik-ingress-controller
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      volumes:
      - emptyDir: {}
        name: data
      - emptyDir: {}
        name: tmp
